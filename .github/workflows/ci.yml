name: CI

on:
  pull_request:
    branches:
      - main
      - release
      - dev
  push:
    branches:
      - main
      - release
      - dev


jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # jacoco PR 코멘트 작성 권한 추가

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies to speed up the build process.
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      ## 빌드
      - name: Build without tests (dev profile)
        env:
          SPRING_PROFILES_ACTIVE: dev
        run: ./gradlew assemble --no-daemon

      # 테스트
      - name: Run tests (test profile)
        env:
          SPRING_PROFILES_ACTIVE: test
        run: ./gradlew test --no-daemon


      # Jacoco 설정
      # ✅ 커버리지 리포트 생성
      - name: Generate Jacoco Report
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          SPRING_PROFILES_ACTIVE: test
        run: ./gradlew jacocoTestReport

      # ✅  PR에 커버리지 코멘트 작성
      - name: Comment test coverage on PR
        uses: madrapps/jacoco-report@v1.2
        with:
          title: 📝 테스트 커버리지 리포트
          paths: ${{ github.workspace }}/build/jacocoReport/test/jacocoTestReport.xml
          token: ${{ secrets.MY_PAT_TOKEN
            }}
          min-coverage-overall: 80

  ## 의존성 그래프 생성 및 제출

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
